#!/usr/bin/env node

'use strict';

global.config = require('../config')
global.logUtil = require('../utils/log');

if (config.node < 7) {
    require('babel-polyfill');

    if (config.env == 'development') {
        require('babel-register');
    }
}

var app = require('../app');
var debug = require('debug')('demo1:server');
var http = require('http');

var port = parseInt(config.port || '3000', 10);
var server = http.createServer(app.callback());

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}